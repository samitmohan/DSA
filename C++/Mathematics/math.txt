Math for Computer Science.

Resources ->

More on time complexity -> https://www.bigocheatsheet.com

Study from -> https://cses.fi/book/book.pdf 
              https://cp-algorithms.com/
------

#Number Theory


Density of prime numbers.
π(n) ≈ n/ln(n);n

Prime numbers between 1 and 106 is π(106) = 78498, and 106/ln106 ≈ 72382

Checking if a number is prime in O(root N) time.

------

#Combinatorics

Inclusion Exclusion Principle (Set Theory)

|A ∪ B| = |A| +|B| −|A ∩B |
|A ∪ B ∪ C| = |A| +|B| +|C| −|A ∩ B| −|A ∩ C| −|B ∩ C| +|A ∩ B ∩ C|

Cayley’s formula states that there are n^n−2 labeled trees that contain n nodes.



------

# Geometry
Suppose we have two rectangles R1 and R2. Let (x1, y1) be the location of the bottom-left corner of R1 and (x2, y2) be the location of its top-right corner. Similarly, 
let (x3, y3) and (x4, y4) be the respective corner locations for R2. The intersection of R1 and R2 will be a rectangle R3 whose bottom-left corner is at (max(x1, x3), 
max(y1, y3)) and top-right corner at (min(x2, x4), min(y2, y4)). If max(x1, x3) > min(x2, x4) or max(y1, y3) > min(y2, y4) then R3 does not exist, ie R1 and R2 do not 
intersect.


Convex Hall;
Sort all points.
Pick lowest point at x axis (left and right) -> Lowest and Greatest x value and join them.
Pick point farthest from the line above the original line and join; delete inner points, same for below the line (upper hull and lower hull)
Find these points, repeat same algorithm. [Maintain a stack and add elements that satisfy convex hall.]

Complexity O(NlogN) -> Finding bottom most point O(N), Sorting Points O(NlogN), Every element is pushed or popped O(N)


-----

#Probability 

If an event consists of a single outcome in the sample space, it is called a simple event. Events which consist of more than one outcome are called compound events.

P = fav/total
*always recognize sample space*

P(all events) -> P(X1)*P(X2)*..P(Xn)
P(at least one event) -> 1 - P(all events)

P(A compliment) = 1− P(A).
Bayes Theory = P(A|B) =P(A ∩ B)/P(B)


------


#Newton Raphson Sqrt method

Root = (X + N/X)/2

X => Square root you're guessing
Root -> Actual Root
N -> Number

------

#Pigeonhole principle 
Given n items and m containers (m > n) at least one container consists of 2 items (or m/n items)
// Pigeon and pigeonhole example
